//ATENÇÃO:
//Por estar usando a função srand/rand o valor máximo que pode ser sorteado é RAND_MAX = (2^16) - 1

#include "include\GeradorTaxaExponencial.h"
#include <iostream>
#include <math.h>
#include <stdlib.h>
#include <time.h>

//Inicialização da instancia
GeradorTaxaExponencial* GeradorTaxaExponencial::instancia = NULL;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//-----------------------------------Contrutores & Destrutor-----------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GeradorTaxaExponencial::GeradorTaxaExponencial()
{
	srand(time(NULL));
}

/*GeradorTaxaExponencial::GeradorTaxaExponencial(unsigned int semente_inicial)
{
	srand(semente_inicial);
}*/

GeradorTaxaExponencial::~GeradorTaxaExponencial()
{
	//Destrutor
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------Funções Membro-------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Retorna a instancia única do gerador de números aleatórios
GeradorTaxaExponencial* GeradorTaxaExponencial::GetInstancia()
{
	if (instancia == NULL)
		instancia = new GeradorTaxaExponencial();
		
	return instancia;
}

//Reseta o gerador de números aleatórios para poder ser usado com outra semente
void GeradorTaxaExponencial::ResetarGerador()
{
	srand(1); //Passando 1 como argumento, a função srand reinicia, como se nunca tivesse havido uma chamada a srand ou a rand.
}

//Define uma nova semente para o gerador de números aleatórios(resetando ele antes)
void GeradorTaxaExponencial::DefinirSemente(unsigned int semente)
{
	ResetarGerador();
	srand(semente);
}

//Função do Gerador de Números Aleatórios
double GeradorTaxaExponencial::Random()
{
	return (rand() % RAND_MAX) / (double) RAND_MAX;
}

//Faz a inversa do log para encontrar uma exponencial
double GeradorTaxaExponencial::ExponencialInversa(double taxa)
{
	return (-1) * (log(1 - this->Random()) / taxa);
}
