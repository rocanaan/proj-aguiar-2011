#include "include\Evento.h"
#include <iostream>
#include <cstdlib>
#include <string>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//-----------------------------------Contrutores ----------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    Evento::Evento(EnumTipo ptipo, double ptempo_acontecimento)
	{
        this->tipo = ptipo;
        this->tempo_acontecimento = ptempo_acontecimento;
    }
	
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------Funções Membro-------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    EnumTipo Evento::getTipo()
	{
        return tipo;
    }
	
    double Evento::getTempoAcontecimento() const
	{
        return tempo_acontecimento;
    }
	
    ostream& Evento::imprime(ostream& o)
	{
        o << "Evento do tipo " << tipo << " marcado para " << tempo_acontecimento << endl;
    }

	//Redefinição do operador > para podermos usar a priority_queue corretamente, ou seja, ordenando pelo tempo de acontecimento
	/*bool Evento::operator > (const Evento evento2) const
	{
		return (this->getTempoAcontecimento() > evento2.getTempoAcontecimento());                                                                 
	}*/
